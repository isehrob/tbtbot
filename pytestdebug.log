versions pytest-3.0.6, py-1.4.32, python-3.5.1.final.0
cwd=/home/s_ibrohimov/projects/tbtbot
args=['--debug', 'tbtbot']

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x7f0cf6a763c8>
    pytest_plugin_registered [hook]
        plugin: <Session 'tbtbot'>
        manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x7f0cf6a763c8>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x7f0cf257c780>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
    find_module called for: unittest.mock [assertion]
    find_module called for: py._io.terminalwriter [assertion]
    find_module called for: termios [assertion]
    find_module called for: fcntl [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x7f0cf6a763c8>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.config.Config object at 0x7f0cf6a763c8>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/mark.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.mark' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/mark.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/main.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.main' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/main.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/terminal.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.terminal' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/terminal.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/runner.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.runner' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/runner.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/python.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.python' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/python.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/fixtures.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.fixtures' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/fixtures.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/debugging.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.debugging' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/debugging.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/unittest.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.unittest' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/unittest.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/capture.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.capture' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/capture.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/skipping.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.skipping' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/skipping.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/tmpdir.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.tmpdir' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/tmpdir.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/monkeypatch.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.monkeypatch' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/monkeypatch.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/recwarn.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.recwarn' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/recwarn.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/pastebin.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.pastebin' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/pastebin.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/helpconfig.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.helpconfig' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/helpconfig.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/nose.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.nose' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/nose.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/assertion/__init__.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.assertion' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/assertion/__init__.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/junitxml.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.junitxml' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/junitxml.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.resultlog' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/resultlog.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.resultlog' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/resultlog.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/doctest.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.doctest' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/doctest.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/cacheprovider.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.cacheprovider' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/cacheprovider.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/freeze_support.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.freeze_support' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/freeze_support.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/setuponly.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.setuponly' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/setuponly.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/setupplan.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.setupplan' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/setupplan.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_mock' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module 'pytest_mock' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_mccabe' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module 'pytest_mccabe' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_flakes' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module 'pytest_flakes' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_pep8' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module 'pytest_pep8' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.capture.CaptureManager object at 0x7f0cf256b940>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.capture.CaptureManager object at 0x7f0cf256b940>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session 'tbtbot'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <Session 'tbtbot'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x7f0cf257c780>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.cacheprovider.LFPlugin object at 0x7f0cf257c780>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x7f0cf251c940>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session 'tbtbot'>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x7f0cf6a763c8>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.config.Config object at 0x7f0cf6a763c8>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/mark.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.mark' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/mark.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/main.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.main' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/main.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/terminal.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.terminal' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/terminal.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/runner.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.runner' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/runner.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/python.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.python' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/python.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/fixtures.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.fixtures' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/fixtures.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/debugging.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.debugging' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/debugging.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/unittest.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.unittest' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/unittest.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/capture.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.capture' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/capture.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/skipping.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.skipping' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/skipping.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/tmpdir.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.tmpdir' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/tmpdir.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/monkeypatch.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.monkeypatch' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/monkeypatch.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/recwarn.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.recwarn' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/recwarn.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/pastebin.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.pastebin' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/pastebin.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/helpconfig.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.helpconfig' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/helpconfig.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/nose.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.nose' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/nose.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/assertion/__init__.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.assertion' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/assertion/__init__.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/junitxml.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.junitxml' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/junitxml.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.resultlog' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/resultlog.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.resultlog' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/resultlog.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/doctest.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.doctest' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/doctest.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/cacheprovider.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.cacheprovider' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/cacheprovider.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/freeze_support.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.freeze_support' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/freeze_support.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/setuponly.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.setuponly' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/setuponly.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/setupplan.py'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module '_pytest.setupplan' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/setupplan.py'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_mock' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module 'pytest_mock' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_mccabe' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module 'pytest_mccabe' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_flakes' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module 'pytest_flakes' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_pep8' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <module 'pytest_pep8' (<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.capture.CaptureManager object at 0x7f0cf256b940>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.capture.CaptureManager object at 0x7f0cf256b940>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session 'tbtbot'>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <Session 'tbtbot'>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x7f0cf257c780>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.cacheprovider.LFPlugin object at 0x7f0cf257c780>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x7f0cf251c940>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'plugin': <_pytest.terminal.TerminalReporter object at 0x7f0cf251c940>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'manager': <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>}>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x7f0cf2536d30>
          manager: <_pytest.config.PytestPluginManager object at 0x7f0cfe70a4a8>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x7f0cf6a763c8>
          startdir: /home/s_ibrohimov/projects/tbtbot
      finish pytest_report_header --> [['rootdir: /home/s_ibrohimov/projects/tbtbot, inifile: ', 'plugins: mock-1.5.0, mccabe-0.1, flakes-1.0.1, pep8-1.0.6'], ['using: pytest-3.0.6 pylib-1.4.32', 'setuptools registered plugins:', '  pytest-mock-1.5.0 at /home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/pytest_mock.py', '  pytest-mccabe-0.1 at /home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/pytest_mccabe.py', '  pytest-flakes-1.0.1 at /home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/pytest_flakes.py', '  pytest-pep8-1.0.6 at /home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/pytest_pep8.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session 'tbtbot'>
    perform_collect <Session 'tbtbot'> ['tbtbot'] [collection]
        pytest_collectstart [hook]
            collector: <Session 'tbtbot'>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session 'tbtbot'>
        processing argument /home/s_ibrohimov/projects/tbtbot/tbtbot [collection]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/__pycache__
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/__pycache__
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/__init__.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/__init__.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/__pycache__/__init__.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/__pycache__/__init__.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/__pycache__
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/__pycache__
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/__init__.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/__init__.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/app.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/app.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/app_with_updates.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/app_with_updates.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/db.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/db.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/handlers.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/handlers.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/models.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/models.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/routes.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/routes.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/template_strings.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/template_strings.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/__pycache__/__init__.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/__pycache__/__init__.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/__pycache__/template_strings.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/__pycache__/template_strings.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/__pycache__/templatestrings.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/__pycache__/templatestrings.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/__pycache__
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/__pycache__
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/__init__.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/__init__.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/application.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/application.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/custom.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/custom.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/handler.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/handler.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/telegrambotapi.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/telegrambotapi.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/updater.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/updater.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/utils.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/utils.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/__pycache__/__init__.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/__pycache__/__init__.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/__pycache__/application.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/__pycache__/application.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/__pycache__/custom.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/__pycache__/custom.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/__pycache__/handler.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/__pycache__/handler.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/__pycache__/updater.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/__pycache__/updater.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/__pycache__/utils.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/lib/__pycache__/utils.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/__pycache__
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/__pycache__
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/__init__.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/__init__.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/cli.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/cli.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/__pycache__/__init__.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/__pycache__/__init__.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/__pycache__/cli.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/__pycache__/cli.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/__pycache__/utils.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/__pycache__/utils.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__init__.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__init__.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/cmd_create_bot.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/cmd_create_bot.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/cmd_create_ssl_cert.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/cmd_create_ssl_cert.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/cmd_drop_webhook.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/cmd_drop_webhook.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/cmd_list_bot_commands.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/cmd_list_bot_commands.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/cmd_set_webhook.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/cmd_set_webhook.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/cmd_start.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/cmd_start.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/cmd_sync_db.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/cmd_sync_db.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/cmd_webhook_info.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/cmd_webhook_info.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/__init__.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/__init__.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/cmd_create_bot.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/cmd_create_bot.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/cmd_create_ssl_cert.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/cmd_create_ssl_cert.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/cmd_drop_webhook.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/cmd_drop_webhook.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/cmd_list_bot_commands.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/cmd_list_bot_commands.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/cmd_set_webhook.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/cmd_set_webhook.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/cmd_start.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/cmd_start.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/cmd_sync_db.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/cmd_sync_db.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/cmd_webhook_info.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/cmd_webhook_info.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/tbtboter.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/tbtboter.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/templatestrings.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__pycache__/templatestrings.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/__pycache__
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/__pycache__
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/__init__.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/__init__.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/test_utils.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/test_utils.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session 'tbtbot'>
                  path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/test_utils.py
              finish pytest_pycollect_makemodule --> <Module 'tbtbot/tests/test_utils.py'> [hook]
            finish pytest_collect_file --> [<Module 'tbtbot/tests/test_utils.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/__pycache__/__init__.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/__pycache__/__init__.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/__pycache__/test_utils.cpython-35-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/__pycache__/test_utils.cpython-35-PYTEST.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__init__.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__init__.py
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_create_bot.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_create_bot.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session 'tbtbot'>
                  path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_create_bot.py
              finish pytest_pycollect_makemodule --> <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'> [hook]
            finish pytest_collect_file --> [<Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session 'tbtbot'>
                  path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py
              finish pytest_pycollect_makemodule --> <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'> [hook]
            finish pytest_collect_file --> [<Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_start.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_start.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session 'tbtbot'>
                  path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_start.py
              finish pytest_pycollect_makemodule --> <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'> [hook]
            finish pytest_collect_file --> [<Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_other.py
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_other.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session 'tbtbot'>
                  path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_other.py
              finish pytest_pycollect_makemodule --> <Module 'tbtbot/tests/tbtboter/test_other.py'> [hook]
            finish pytest_collect_file --> [<Module 'tbtbot/tests/tbtboter/test_other.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__/__init__.cpython-35.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__/__init__.cpython-35.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__/test_ather.cpython-35-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__/test_ather.cpython-35-PYTEST.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__/test_cmd_create_bot.cpython-35-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__/test_cmd_create_bot.cpython-35-PYTEST.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__/test_cmd_create_ssl_cert.cpython-35-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__/test_cmd_create_ssl_cert.cpython-35-PYTEST.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__/test_cmd_start.cpython-35-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__/test_cmd_start.cpython-35-PYTEST.pyc
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__/test_other.cpython-35-PYTEST.pyc
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                parent: <Session 'tbtbot'>
                path: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__/test_other.cpython-35-PYTEST.pyc
            finish pytest_collect_file --> [] [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=5 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=5 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module 'tbtbot/tests/test_utils.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'tbtbot/tests/test_utils.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'tbtbot/tests/test_utils.py'>
      find_module called for: tbtbot [assertion]
      find_module called for: tbtbot.tests [assertion]
      find_module called for: tbtbot.tests.test_utils [assertion]
      matched test file '/home/s_ibrohimov/projects/tbtbot/tbtbot/tests/test_utils.py' [assertion]
      found cached rewritten pyc for '/home/s_ibrohimov/projects/tbtbot/tbtbot/tests/test_utils.py' [assertion]
      find_module called for: click [assertion]
      find_module called for: click.core [assertion]
      find_module called for: click.types [assertion]
      find_module called for: click._compat [assertion]
      find_module called for: click.exceptions [assertion]
      find_module called for: click.utils [assertion]
      find_module called for: click.globals [assertion]
      find_module called for: click.termui [assertion]
      find_module called for: click.formatting [assertion]
      find_module called for: click.parser [assertion]
      find_module called for: click._unicodefun [assertion]
      find_module called for: click.decorators [assertion]
      find_module called for: click.testing [assertion]
      find_module called for: tbtbot.lib [assertion]
      find_module called for: tbtbot.lib.handler [assertion]
      find_module called for: tornado [assertion]
      find_module called for: tornado.web [assertion]
      find_module called for: gzip [assertion]
      find_module called for: hmac [assertion]
      find_module called for: mimetypes [assertion]
      find_module called for: winreg [assertion]
      find_module called for: numbers [assertion]
      find_module called for: tornado.concurrent [assertion]
      find_module called for: tornado.log [assertion]
      find_module called for: logging.handlers [assertion]
      find_module called for: pickle [assertion]
      find_module called for: _compat_pickle [assertion]
      find_module called for: org [assertion]
      find_module called for: _pickle [assertion]
      find_module called for: queue [assertion]
      find_module called for: tornado.escape [assertion]
      find_module called for: tornado.util [assertion]
      find_module called for: array [assertion]
      find_module called for: typing [assertion]
      find_module called for: tornado.speedups [assertion]
      find_module called for: html [assertion]
      find_module called for: html.entities [assertion]
      find_module called for: curses [assertion]
      find_module called for: _curses [assertion]
      find_module called for: tornado.stack_context [assertion]
      find_module called for: concurrent [assertion]
      find_module called for: concurrent.futures [assertion]
      find_module called for: concurrent.futures._base [assertion]
      find_module called for: concurrent.futures.process [assertion]
      find_module called for: multiprocessing [assertion]
      find_module called for: multiprocessing.context [assertion]
      find_module called for: multiprocessing.process [assertion]
      find_module called for: multiprocessing.connection [assertion]
      find_module called for: _multiprocessing [assertion]
      find_module called for: multiprocessing.reduction [assertion]
      find_module called for: multiprocessing.util [assertion]
      find_module called for: _winapi [assertion]
      find_module called for: concurrent.futures.thread [assertion]
      find_module called for: tornado.gen [assertion]
      find_module called for: tornado.ioloop [assertion]
      find_module called for: tornado.platform [assertion]
      find_module called for: tornado.platform.auto [assertion]
      find_module called for: tornado.platform.posix [assertion]
      find_module called for: tornado.platform.interface [assertion]
      find_module called for: monotime [assertion]
      find_module called for: monotonic [assertion]
      find_module called for: tornado.platform.asyncio [assertion]
      find_module called for: asyncio [assertion]
      find_module called for: asyncio.selectors [assertion]
      find_module called for: asyncio.base_events [assertion]
      find_module called for: asyncio.compat [assertion]
      find_module called for: asyncio.coroutines [assertion]
      find_module called for: asyncio.events [assertion]
      find_module called for: asyncio.futures [assertion]
      find_module called for: asyncio.log [assertion]
      find_module called for: asyncio.tasks [assertion]
      find_module called for: asyncio.locks [assertion]
      find_module called for: asyncio.protocols [assertion]
      find_module called for: asyncio.queues [assertion]
      find_module called for: asyncio.streams [assertion]
      find_module called for: asyncio.subprocess [assertion]
      find_module called for: asyncio.transports [assertion]
      find_module called for: asyncio.unix_events [assertion]
      find_module called for: asyncio.base_subprocess [assertion]
      find_module called for: asyncio.constants [assertion]
      find_module called for: asyncio.selector_events [assertion]
      find_module called for: ssl [assertion]
      find_module called for: ipaddress [assertion]
      find_module called for: _ssl [assertion]
      find_module called for: asyncio.sslproto [assertion]
      find_module called for: tornado.httputil [assertion]
      find_module called for: http [assertion]
      find_module called for: http.cookies [assertion]
      find_module called for: http.client [assertion]
      find_module called for: tornado.iostream [assertion]
      find_module called for: tornado.netutil [assertion]
      find_module called for: certifi [assertion]
      find_module called for: encodings.idna [assertion]
      find_module called for: stringprep [assertion]
      find_module called for: unicodedata [assertion]
      find_module called for: tornado.locale [assertion]
      find_module called for: csv [assertion]
      find_module called for: _csv [assertion]
      find_module called for: tornado._locale_data [assertion]
      find_module called for: tornado.template [assertion]
      find_module called for: tornado.httpclient [assertion]
      find_module called for: tbtbot.lib.application [assertion]
      find_module called for: tbtbot.lib.utils [assertion]
      find_module called for: tbtbot.lib.updater [assertion]
      find_module called for: tbtbot.tbtboter [assertion]
      find_module called for: tbtbot.tbtboter.commands [assertion]
      find_module called for: tbtbot.tbtboter.commands.cmd_create_bot [assertion]
      find_module called for: tbtbot.tbtboter.cli [assertion]
      find_module called for: tbtbot.tbtboter.commands.cmd_create_ssl_cert [assertion]
      find_module called for: tbtbot.apptemplate [assertion]
      find_module called for: tbtbot.apptemplate.template_strings [assertion]
        pytest_pycollect_makeitem [hook]
            name: make_config_file
            obj: <function make_config_file at 0x7f0cf0dfa840>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __package__
            obj: tbtbot.tests
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: test_make_config_file_func
            obj: <function test_make_config_file_func at 0x7f0cf0dfa9d8>
            collector: <Module 'tbtbot/tests/test_utils.py'>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0cf2546048>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_make_config_file_func'>] [hook]
        pytest_pycollect_makeitem [hook]
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: test_make_env_file_func
            obj: <function test_make_env_file_func at 0x7f0cf0dfaa60>
            collector: <Module 'tbtbot/tests/test_utils.py'>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0cf0dfe6a0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_make_env_file_func'>] [hook]
        pytest_pycollect_makeitem [hook]
            name: test_bot_config_checker
            obj: <function test_bot_config_checker at 0x7f0cf2538b70>
            collector: <Module 'tbtbot/tests/test_utils.py'>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0cf0dfe828>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_bot_config_checker'>] [hook]
        pytest_pycollect_makeitem [hook]
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/assertion/rewrite.py'>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: CliRunner
            obj: <class 'click.testing.CliRunner'>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: pytest
            obj: <module 'pytest' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/pytest.py'>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __name__
            obj: tbtbot.tests.test_utils
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __builtins__
            obj: {'round': <built-in function round>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'memoryview': <class 'memoryview'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'OverflowError': <class 'OverflowError'>, 'license': Type license() to see the full license text, 'property': <class 'property'>, 'repr': <built-in function repr>, 'open': <built-in function open>, 'RuntimeError': <class 'RuntimeError'>, 'ImportWarning': <class 'ImportWarning'>, 'abs': <built-in function abs>, 'help': Type help() for interactive help, or help(object) for help about object., 'True': True, 'MemoryError': <class 'MemoryError'>, 'reversed': <class 'reversed'>, 'KeyError': <class 'KeyError'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'NotImplemented': NotImplemented, 'vars': <built-in function vars>, 'FutureWarning': <class 'FutureWarning'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'iter': <built-in function iter>, 'all': <built-in function all>, 'bool': <class 'bool'>, 'InterruptedError': <class 'InterruptedError'>, 'ReferenceError': <class 'ReferenceError'>, 'sorted': <built-in function sorted>, 'ValueError': <class 'ValueError'>, 'compile': <built-in function compile>, 'RecursionError': <class 'RecursionError'>, 'isinstance': <built-in function isinstance>, 'bytes': <class 'bytes'>, 'TypeError': <class 'TypeError'>, 'SystemExit': <class 'SystemExit'>, 'NotImplementedError': <class 'NotImplementedError'>, 'locals': <built-in function locals>, 'IndexError': <class 'IndexError'>, 'NameError': <class 'NameError'>, 'TimeoutError': <class 'TimeoutError'>, 'max': <built-in function max>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'Ellipsis': Ellipsis, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'map': <class 'map'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'BytesWarning': <class 'BytesWarning'>, 'FileExistsError': <class 'FileExistsError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'id': <built-in function id>, 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'ord': <built-in function ord>, 'tuple': <class 'tuple'>, 'callable': <built-in function callable>, 'IndentationError': <class 'IndentationError'>, 'zip': <class 'zip'>, 'ImportError': <class 'ImportError'>, 'format': <built-in function format>, 'dict': <class 'dict'>, 'None': None, 'min': <built-in function min>, '__name__': 'builtins', 'OSError': <class 'OSError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'delattr': <built-in function delattr>, 'hasattr': <built-in function hasattr>, 'float': <class 'float'>, 'PermissionError': <class 'PermissionError'>, 'pow': <built-in function pow>, 'NotADirectoryError': <class 'NotADirectoryError'>, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, 'staticmethod': <class 'staticmethod'>, 'setattr': <built-in function setattr>, 'type': <class 'type'>, 'set': <class 'set'>, 'Warning': <class 'Warning'>, 'UnicodeError': <class 'UnicodeError'>, 'ConnectionError': <class 'ConnectionError'>, 'chr': <built-in function chr>, 'print': <built-in function print>, 'TabError': <class 'TabError'>, 'list': <class 'list'>, 'bin': <built-in function bin>, '__package__': '', 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'SystemError': <class 'SystemError'>, 'range': <class 'range'>, 'int': <class 'int'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'dir': <built-in function dir>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'globals': <built-in function globals>, 'SyntaxError': <class 'SyntaxError'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'AttributeError': <class 'AttributeError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'StopIteration': <class 'StopIteration'>, 'UserWarning': <class 'UserWarning'>, 'LookupError': <class 'LookupError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'hex': <built-in function hex>, 'ArithmeticError': <class 'ArithmeticError'>, 'BufferError': <class 'BufferError'>, 'len': <built-in function len>, 'getattr': <built-in function getattr>, 'slice': <class 'slice'>, 'frozenset': <class 'frozenset'>, '__import__': <built-in function __import__>, 'hash': <built-in function hash>, 'str': <class 'str'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), 'next': <built-in function next>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'EnvironmentError': <class 'OSError'>, 'input': <built-in function input>, 'ascii': <built-in function ascii>, 'classmethod': <class 'classmethod'>, 'sum': <built-in function sum>, 'EOFError': <class 'EOFError'>, 'BaseException': <class 'BaseException'>, 'IOError': <class 'OSError'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'False': False, 'enumerate': <class 'enumerate'>, '__build_class__': <built-in function __build_class__>, 'oct': <built-in function oct>, 'AssertionError': <class 'AssertionError'>, 'divmod': <built-in function divmod>, 'exec': <built-in function exec>, 'bytearray': <class 'bytearray'>, 'copyright': Copyright (c) 2001-2015 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'BlockingIOError': <class 'BlockingIOError'>, '__debug__': True, 'GeneratorExit': <class 'GeneratorExit'>, 'any': <built-in function any>, 'filter': <class 'filter'>, 'Exception': <class 'Exception'>, 'super': <class 'super'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'object': <class 'object'>, 'complex': <class 'complex'>, '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", 'eval': <built-in function eval>, 'issubclass': <built-in function issubclass>, 'FloatingPointError': <class 'FloatingPointError'>, 'UnboundLocalError': <class 'UnboundLocalError'>}
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __spec__
            obj: ModuleSpec(name='tbtbot.tests.test_utils', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: test_set_env_func
            obj: <function test_set_env_func at 0x7f0cf0dfaae8>
            collector: <Module 'tbtbot/tests/test_utils.py'>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0cf0dfeb00>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_set_env_func'>] [hook]
        pytest_pycollect_makeitem [hook]
            name: set_env
            obj: <function set_env at 0x7f0cf0dfa730>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: make_env_file
            obj: <function make_env_file at 0x7f0cf0dfa6a8>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __file__
            obj: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/test_utils.py
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: check_bot_config
            obj: <function check_bot_config at 0x7f0cf0df49d8>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __doc__
            obj: None
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __cached__
            obj: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/__pycache__/test_utils.cpython-35-PYTEST.pyc
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __new__
            obj: <built-in method __new__ of type object at 0x87a9a0>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __format__
            obj: <method '__format__' of 'object' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
            collector: <Module 'tbtbot/tests/test_utils.py'>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tbtbot/tests/test_utils.py' lenresult=4 outcome='passed'> [hook]
    genitems <Function 'test_bot_config_checker'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_bot_config_checker'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_make_config_file_func'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_make_config_file_func'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_make_env_file_func'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_make_env_file_func'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_set_env_func'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_set_env_func'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tbtbot/tests/test_utils.py' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
      find_module called for: tbtbot.tests.tbtboter [assertion]
      find_module called for: tbtbot.tests.tbtboter.test_cmd_create_bot [assertion]
      matched test file '/home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_create_bot.py' [assertion]
      found cached rewritten pyc for '/home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_create_bot.py' [assertion]
      find_module called for: mock [assertion]
      find_module called for: mock.mock [assertion]
      find_module called for: six [assertion]
      find_module called for: pbr [assertion]
      find_module called for: pbr.version [assertion]
        pytest_pycollect_makeitem [hook]
            name: sys
            obj: <module 'sys' (built-in)>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __package__
            obj: tbtbot.tests.tbtboter
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: test_create_bot_with_upd
            obj: <function test_create_bot_with_upd at 0x7f0cf0dd1730>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0cf0e0d908>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_create_bot_with_upd'>] [hook]
        pytest_pycollect_makeitem [hook]
            name: __spec__
            obj: ModuleSpec(name='tbtbot.tests.tbtboter.test_cmd_create_bot', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/assertion/rewrite.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: tstrings
            obj: <module 'tbtbot.apptemplate.template_strings' from '/home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/template_strings.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: pytest
            obj: <module 'pytest' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/pytest.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: mock
            obj: <module 'mock' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/mock/__init__.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __builtins__
            obj: {'round': <built-in function round>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'memoryview': <class 'memoryview'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'OverflowError': <class 'OverflowError'>, 'license': Type license() to see the full license text, 'property': <class 'property'>, 'repr': <built-in function repr>, 'open': <built-in function open>, 'RuntimeError': <class 'RuntimeError'>, 'ImportWarning': <class 'ImportWarning'>, 'abs': <built-in function abs>, 'help': Type help() for interactive help, or help(object) for help about object., 'True': True, 'MemoryError': <class 'MemoryError'>, 'reversed': <class 'reversed'>, 'KeyError': <class 'KeyError'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'NotImplemented': NotImplemented, 'vars': <built-in function vars>, 'FutureWarning': <class 'FutureWarning'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'iter': <built-in function iter>, 'all': <built-in function all>, 'bool': <class 'bool'>, 'InterruptedError': <class 'InterruptedError'>, 'ReferenceError': <class 'ReferenceError'>, 'sorted': <built-in function sorted>, 'ValueError': <class 'ValueError'>, 'compile': <built-in function compile>, 'RecursionError': <class 'RecursionError'>, 'isinstance': <built-in function isinstance>, 'bytes': <class 'bytes'>, 'TypeError': <class 'TypeError'>, 'SystemExit': <class 'SystemExit'>, 'NotImplementedError': <class 'NotImplementedError'>, 'locals': <built-in function locals>, 'IndexError': <class 'IndexError'>, 'NameError': <class 'NameError'>, 'TimeoutError': <class 'TimeoutError'>, 'max': <built-in function max>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'Ellipsis': Ellipsis, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'map': <class 'map'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'BytesWarning': <class 'BytesWarning'>, 'FileExistsError': <class 'FileExistsError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'id': <built-in function id>, 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'ord': <built-in function ord>, 'tuple': <class 'tuple'>, 'callable': <built-in function callable>, 'IndentationError': <class 'IndentationError'>, 'zip': <class 'zip'>, 'ImportError': <class 'ImportError'>, 'format': <built-in function format>, 'dict': <class 'dict'>, 'None': None, 'min': <built-in function min>, '__name__': 'builtins', 'OSError': <class 'OSError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'delattr': <built-in function delattr>, 'hasattr': <built-in function hasattr>, 'float': <class 'float'>, 'PermissionError': <class 'PermissionError'>, 'pow': <built-in function pow>, 'NotADirectoryError': <class 'NotADirectoryError'>, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, 'staticmethod': <class 'staticmethod'>, 'setattr': <built-in function setattr>, 'type': <class 'type'>, 'set': <class 'set'>, 'Warning': <class 'Warning'>, 'UnicodeError': <class 'UnicodeError'>, 'ConnectionError': <class 'ConnectionError'>, 'chr': <built-in function chr>, 'print': <built-in function print>, 'TabError': <class 'TabError'>, 'list': <class 'list'>, 'bin': <built-in function bin>, '__package__': '', 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'SystemError': <class 'SystemError'>, 'range': <class 'range'>, 'int': <class 'int'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'dir': <built-in function dir>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'globals': <built-in function globals>, 'SyntaxError': <class 'SyntaxError'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'AttributeError': <class 'AttributeError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'StopIteration': <class 'StopIteration'>, 'UserWarning': <class 'UserWarning'>, 'LookupError': <class 'LookupError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'hex': <built-in function hex>, 'ArithmeticError': <class 'ArithmeticError'>, 'BufferError': <class 'BufferError'>, 'len': <built-in function len>, 'getattr': <built-in function getattr>, 'slice': <class 'slice'>, 'frozenset': <class 'frozenset'>, '__import__': <built-in function __import__>, 'hash': <built-in function hash>, 'str': <class 'str'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), 'next': <built-in function next>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'EnvironmentError': <class 'OSError'>, 'input': <built-in function input>, 'ascii': <built-in function ascii>, 'classmethod': <class 'classmethod'>, 'sum': <built-in function sum>, 'EOFError': <class 'EOFError'>, 'BaseException': <class 'BaseException'>, 'IOError': <class 'OSError'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'False': False, 'enumerate': <class 'enumerate'>, '__build_class__': <built-in function __build_class__>, 'oct': <built-in function oct>, 'AssertionError': <class 'AssertionError'>, 'divmod': <built-in function divmod>, 'exec': <built-in function exec>, 'bytearray': <class 'bytearray'>, 'copyright': Copyright (c) 2001-2015 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'BlockingIOError': <class 'BlockingIOError'>, '__debug__': True, 'GeneratorExit': <class 'GeneratorExit'>, 'any': <built-in function any>, 'filter': <class 'filter'>, 'Exception': <class 'Exception'>, 'super': <class 'super'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'object': <class 'object'>, 'complex': <class 'complex'>, '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", 'eval': <built-in function eval>, 'issubclass': <built-in function issubclass>, 'FloatingPointError': <class 'FloatingPointError'>, 'UnboundLocalError': <class 'UnboundLocalError'>}
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: test_create_with_webhook_without_cert
            obj: <function test_create_with_webhook_without_cert at 0x7f0cf0dfaea0>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0cf0dce278>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_create_with_webhook_without_cert'>] [hook]
        pytest_pycollect_makeitem [hook]
            name: runner
            obj: <function runner at 0x7f0cf0dfae18>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: make_env_file
            obj: <function make_env_file at 0x7f0cf0dfa6a8>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __file__
            obj: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_create_bot.py
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __cached__
            obj: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__/test_cmd_create_bot.cpython-35-PYTEST.pyc
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: make_config_file
            obj: <function make_config_file at 0x7f0cf0dfa840>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: cli
            obj: <module 'tbtbot.tbtboter.cli' from '/home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/cli.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: test_create_bot_with_unknown_argument
            obj: <function test_create_bot_with_unknown_argument at 0x7f0cf0dd1950>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0cf0dce588>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_create_bot_with_unknown_argument'>] [hook]
        pytest_pycollect_makeitem [hook]
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: commands
            obj: <module 'tbtbot.tbtboter.commands' from '/home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__init__.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: shutil
            obj: <module 'shutil' from '/usr/local/lib/python3.5/shutil.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: CliRunner
            obj: <class 'click.testing.CliRunner'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __name__
            obj: tbtbot.tests.tbtboter.test_cmd_create_bot
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: set_env
            obj: <function set_env at 0x7f0cf0dfa730>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: os
            obj: <module 'os' from '/usr/local/lib/python3.5/os.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __doc__
            obj: 
	Here we test our main console utility functionality

            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __new__
            obj: <built-in method __new__ of type object at 0x87a9a0>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __format__
            obj: <method '__format__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_bot.py'>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py' lenresult=3 outcome='passed'> [hook]
    genitems <Function 'test_create_with_webhook_without_cert'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_create_with_webhook_without_cert'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_create_bot_with_upd'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_create_bot_with_upd'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_create_bot_with_unknown_argument'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_create_bot_with_unknown_argument'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
      find_module called for: tbtbot.tests.tbtboter.test_cmd_create_ssl_cert [assertion]
      matched test file '/home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py' [assertion]
      found cached rewritten pyc for '/home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py' [assertion]
        pytest_pycollect_makeitem [hook]
            name: sys
            obj: <module 'sys' (built-in)>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __package__
            obj: tbtbot.tests.tbtboter
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: test_create_ssl_cert_succed
            obj: <function test_create_ssl_cert_succed at 0x7f0cf0dd1e18>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0cf0dcde10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_create_ssl_cert_succed'>] [hook]
        pytest_pycollect_makeitem [hook]
            name: test_create_ssl_cert_failed
            obj: <function test_create_ssl_cert_failed at 0x7f0cf0dd1d90>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0cf0dcdfd0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_create_ssl_cert_failed'>] [hook]
        pytest_pycollect_makeitem [hook]
            name: __spec__
            obj: ModuleSpec(name='tbtbot.tests.tbtboter.test_cmd_create_ssl_cert', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/assertion/rewrite.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: tstrings
            obj: <module 'tbtbot.apptemplate.template_strings' from '/home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/template_strings.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: pytest
            obj: <module 'pytest' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/pytest.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: CliRunner
            obj: <class 'click.testing.CliRunner'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __builtins__
            obj: {'round': <built-in function round>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'memoryview': <class 'memoryview'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'OverflowError': <class 'OverflowError'>, 'license': Type license() to see the full license text, 'property': <class 'property'>, 'repr': <built-in function repr>, 'open': <built-in function open>, 'RuntimeError': <class 'RuntimeError'>, 'ImportWarning': <class 'ImportWarning'>, 'abs': <built-in function abs>, 'help': Type help() for interactive help, or help(object) for help about object., 'True': True, 'MemoryError': <class 'MemoryError'>, 'reversed': <class 'reversed'>, 'KeyError': <class 'KeyError'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'NotImplemented': NotImplemented, 'vars': <built-in function vars>, 'FutureWarning': <class 'FutureWarning'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'iter': <built-in function iter>, 'all': <built-in function all>, 'bool': <class 'bool'>, 'InterruptedError': <class 'InterruptedError'>, 'ReferenceError': <class 'ReferenceError'>, 'sorted': <built-in function sorted>, 'ValueError': <class 'ValueError'>, 'compile': <built-in function compile>, 'RecursionError': <class 'RecursionError'>, 'isinstance': <built-in function isinstance>, 'bytes': <class 'bytes'>, 'TypeError': <class 'TypeError'>, 'SystemExit': <class 'SystemExit'>, 'NotImplementedError': <class 'NotImplementedError'>, 'locals': <built-in function locals>, 'IndexError': <class 'IndexError'>, 'NameError': <class 'NameError'>, 'TimeoutError': <class 'TimeoutError'>, 'max': <built-in function max>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'Ellipsis': Ellipsis, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'map': <class 'map'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'BytesWarning': <class 'BytesWarning'>, 'FileExistsError': <class 'FileExistsError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'id': <built-in function id>, 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'ord': <built-in function ord>, 'tuple': <class 'tuple'>, 'callable': <built-in function callable>, 'IndentationError': <class 'IndentationError'>, 'zip': <class 'zip'>, 'ImportError': <class 'ImportError'>, 'format': <built-in function format>, 'dict': <class 'dict'>, 'None': None, 'min': <built-in function min>, '__name__': 'builtins', 'OSError': <class 'OSError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'delattr': <built-in function delattr>, 'hasattr': <built-in function hasattr>, 'float': <class 'float'>, 'PermissionError': <class 'PermissionError'>, 'pow': <built-in function pow>, 'NotADirectoryError': <class 'NotADirectoryError'>, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, 'staticmethod': <class 'staticmethod'>, 'setattr': <built-in function setattr>, 'type': <class 'type'>, 'set': <class 'set'>, 'Warning': <class 'Warning'>, 'UnicodeError': <class 'UnicodeError'>, 'ConnectionError': <class 'ConnectionError'>, 'chr': <built-in function chr>, 'print': <built-in function print>, 'TabError': <class 'TabError'>, 'list': <class 'list'>, 'bin': <built-in function bin>, '__package__': '', 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'SystemError': <class 'SystemError'>, 'range': <class 'range'>, 'int': <class 'int'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'dir': <built-in function dir>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'globals': <built-in function globals>, 'SyntaxError': <class 'SyntaxError'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'AttributeError': <class 'AttributeError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'StopIteration': <class 'StopIteration'>, 'UserWarning': <class 'UserWarning'>, 'LookupError': <class 'LookupError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'hex': <built-in function hex>, 'ArithmeticError': <class 'ArithmeticError'>, 'BufferError': <class 'BufferError'>, 'len': <built-in function len>, 'getattr': <built-in function getattr>, 'slice': <class 'slice'>, 'frozenset': <class 'frozenset'>, '__import__': <built-in function __import__>, 'hash': <built-in function hash>, 'str': <class 'str'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), 'next': <built-in function next>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'EnvironmentError': <class 'OSError'>, 'input': <built-in function input>, 'ascii': <built-in function ascii>, 'classmethod': <class 'classmethod'>, 'sum': <built-in function sum>, 'EOFError': <class 'EOFError'>, 'BaseException': <class 'BaseException'>, 'IOError': <class 'OSError'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'False': False, 'enumerate': <class 'enumerate'>, '__build_class__': <built-in function __build_class__>, 'oct': <built-in function oct>, 'AssertionError': <class 'AssertionError'>, 'divmod': <built-in function divmod>, 'exec': <built-in function exec>, 'bytearray': <class 'bytearray'>, 'copyright': Copyright (c) 2001-2015 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'BlockingIOError': <class 'BlockingIOError'>, '__debug__': True, 'GeneratorExit': <class 'GeneratorExit'>, 'any': <built-in function any>, 'filter': <class 'filter'>, 'Exception': <class 'Exception'>, 'super': <class 'super'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'object': <class 'object'>, 'complex': <class 'complex'>, '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", 'eval': <built-in function eval>, 'issubclass': <built-in function issubclass>, 'FloatingPointError': <class 'FloatingPointError'>, 'UnboundLocalError': <class 'UnboundLocalError'>}
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: runner
            obj: <function runner at 0x7f0cf0dd1bf8>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: make_env_file
            obj: <function make_env_file at 0x7f0cf0dfa6a8>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __file__
            obj: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __cached__
            obj: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__/test_cmd_create_ssl_cert.cpython-35-PYTEST.pyc
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: make_config_file
            obj: <function make_config_file at 0x7f0cf0dfa840>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: test_create_ssl_cert_command_invalid_path
            obj: <function test_create_ssl_cert_command_invalid_path at 0x7f0cf0dd1c80>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0cf0dd9438>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_create_ssl_cert_command_invalid_path'>] [hook]
        pytest_pycollect_makeitem [hook]
            name: cli
            obj: <module 'tbtbot.tbtboter.cli' from '/home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/cli.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: commands
            obj: <module 'tbtbot.tbtboter.commands' from '/home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__init__.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: mock
            obj: <module 'mock' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/mock/__init__.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __name__
            obj: tbtbot.tests.tbtboter.test_cmd_create_ssl_cert
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: test_create_certificat_success
            obj: <function test_create_certificat_success at 0x7f0cf0dd1a60>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0cf0dcd6d8>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_create_certificat_success'>] [hook]
        pytest_pycollect_makeitem [hook]
            name: set_env
            obj: <function set_env at 0x7f0cf0dfa730>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: os
            obj: <module 'os' from '/usr/local/lib/python3.5/os.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: test_create_certificat_fail
            obj: <function test_create_certificat_fail at 0x7f0cf0dd1d08>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0cf0dcec88>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_create_certificat_fail'>] [hook]
        pytest_pycollect_makeitem [hook]
            name: __doc__
            obj: 
	Here we test our main console utility functionality

            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __new__
            obj: <built-in method __new__ of type object at 0x87a9a0>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __format__
            obj: <method '__format__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py'>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py' lenresult=5 outcome='passed'> [hook]
    genitems <Function 'test_create_ssl_cert_command_invalid_path'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_create_ssl_cert_command_invalid_path'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_create_certificat_success'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_create_certificat_success'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_create_certificat_fail'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_create_certificat_fail'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_create_ssl_cert_failed'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_create_ssl_cert_failed'>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function 'test_create_ssl_cert_succed'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_create_ssl_cert_succed'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
      find_module called for: tbtbot.tests.tbtboter.test_cmd_start [assertion]
      matched test file '/home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_start.py' [assertion]
      found cached rewritten pyc for '/home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_start.py' [assertion]
        pytest_pycollect_makeitem [hook]
            name: sys
            obj: <module 'sys' (built-in)>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __package__
            obj: tbtbot.tests.tbtboter
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __spec__
            obj: ModuleSpec(name='tbtbot.tests.tbtboter.test_cmd_start', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/assertion/rewrite.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: tstrings
            obj: <module 'tbtbot.apptemplate.template_strings' from '/home/s_ibrohimov/projects/tbtbot/tbtbot/apptemplate/template_strings.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: pytest
            obj: <module 'pytest' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/pytest.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: mock
            obj: <module 'mock' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/mock/__init__.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __builtins__
            obj: {'round': <built-in function round>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'memoryview': <class 'memoryview'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'OverflowError': <class 'OverflowError'>, 'license': Type license() to see the full license text, 'property': <class 'property'>, 'repr': <built-in function repr>, 'open': <built-in function open>, 'RuntimeError': <class 'RuntimeError'>, 'ImportWarning': <class 'ImportWarning'>, 'abs': <built-in function abs>, 'help': Type help() for interactive help, or help(object) for help about object., 'True': True, 'MemoryError': <class 'MemoryError'>, 'reversed': <class 'reversed'>, 'KeyError': <class 'KeyError'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'NotImplemented': NotImplemented, 'vars': <built-in function vars>, 'FutureWarning': <class 'FutureWarning'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'iter': <built-in function iter>, 'all': <built-in function all>, 'bool': <class 'bool'>, 'InterruptedError': <class 'InterruptedError'>, 'ReferenceError': <class 'ReferenceError'>, 'sorted': <built-in function sorted>, 'ValueError': <class 'ValueError'>, 'compile': <built-in function compile>, 'RecursionError': <class 'RecursionError'>, 'isinstance': <built-in function isinstance>, 'bytes': <class 'bytes'>, 'TypeError': <class 'TypeError'>, 'SystemExit': <class 'SystemExit'>, 'NotImplementedError': <class 'NotImplementedError'>, 'locals': <built-in function locals>, 'IndexError': <class 'IndexError'>, 'NameError': <class 'NameError'>, 'TimeoutError': <class 'TimeoutError'>, 'max': <built-in function max>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'Ellipsis': Ellipsis, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'map': <class 'map'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'BytesWarning': <class 'BytesWarning'>, 'FileExistsError': <class 'FileExistsError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'id': <built-in function id>, 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'ord': <built-in function ord>, 'tuple': <class 'tuple'>, 'callable': <built-in function callable>, 'IndentationError': <class 'IndentationError'>, 'zip': <class 'zip'>, 'ImportError': <class 'ImportError'>, 'format': <built-in function format>, 'dict': <class 'dict'>, 'None': None, 'min': <built-in function min>, '__name__': 'builtins', 'OSError': <class 'OSError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'delattr': <built-in function delattr>, 'hasattr': <built-in function hasattr>, 'float': <class 'float'>, 'PermissionError': <class 'PermissionError'>, 'pow': <built-in function pow>, 'NotADirectoryError': <class 'NotADirectoryError'>, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, 'staticmethod': <class 'staticmethod'>, 'setattr': <built-in function setattr>, 'type': <class 'type'>, 'set': <class 'set'>, 'Warning': <class 'Warning'>, 'UnicodeError': <class 'UnicodeError'>, 'ConnectionError': <class 'ConnectionError'>, 'chr': <built-in function chr>, 'print': <built-in function print>, 'TabError': <class 'TabError'>, 'list': <class 'list'>, 'bin': <built-in function bin>, '__package__': '', 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'SystemError': <class 'SystemError'>, 'range': <class 'range'>, 'int': <class 'int'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'dir': <built-in function dir>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'globals': <built-in function globals>, 'SyntaxError': <class 'SyntaxError'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'AttributeError': <class 'AttributeError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'StopIteration': <class 'StopIteration'>, 'UserWarning': <class 'UserWarning'>, 'LookupError': <class 'LookupError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'hex': <built-in function hex>, 'ArithmeticError': <class 'ArithmeticError'>, 'BufferError': <class 'BufferError'>, 'len': <built-in function len>, 'getattr': <built-in function getattr>, 'slice': <class 'slice'>, 'frozenset': <class 'frozenset'>, '__import__': <built-in function __import__>, 'hash': <built-in function hash>, 'str': <class 'str'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), 'next': <built-in function next>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'EnvironmentError': <class 'OSError'>, 'input': <built-in function input>, 'ascii': <built-in function ascii>, 'classmethod': <class 'classmethod'>, 'sum': <built-in function sum>, 'EOFError': <class 'EOFError'>, 'BaseException': <class 'BaseException'>, 'IOError': <class 'OSError'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'False': False, 'enumerate': <class 'enumerate'>, '__build_class__': <built-in function __build_class__>, 'oct': <built-in function oct>, 'AssertionError': <class 'AssertionError'>, 'divmod': <built-in function divmod>, 'exec': <built-in function exec>, 'bytearray': <class 'bytearray'>, 'copyright': Copyright (c) 2001-2015 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'BlockingIOError': <class 'BlockingIOError'>, '__debug__': True, 'GeneratorExit': <class 'GeneratorExit'>, 'any': <built-in function any>, 'filter': <class 'filter'>, 'Exception': <class 'Exception'>, 'super': <class 'super'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'object': <class 'object'>, 'complex': <class 'complex'>, '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", 'eval': <built-in function eval>, 'issubclass': <built-in function issubclass>, 'FloatingPointError': <class 'FloatingPointError'>, 'UnboundLocalError': <class 'UnboundLocalError'>}
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: runner
            obj: <function runner at 0x7f0cf0dd1ea0>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: make_env_file
            obj: <function make_env_file at 0x7f0cf0dfa6a8>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __file__
            obj: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_cmd_start.py
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __cached__
            obj: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__/test_cmd_start.cpython-35-PYTEST.pyc
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: make_config_file
            obj: <function make_config_file at 0x7f0cf0dfa840>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: cli
            obj: <module 'tbtbot.tbtboter.cli' from '/home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/cli.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: commands
            obj: <module 'tbtbot.tbtboter.commands' from '/home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/commands/__init__.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: shutil
            obj: <module 'shutil' from '/usr/local/lib/python3.5/shutil.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: CliRunner
            obj: <class 'click.testing.CliRunner'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __name__
            obj: tbtbot.tests.tbtboter.test_cmd_start
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: set_env
            obj: <function set_env at 0x7f0cf0dfa730>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: os
            obj: <module 'os' from '/usr/local/lib/python3.5/os.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: test_start_bot_command
            obj: <function test_start_bot_command at 0x7f0cf0dd1f28>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0cf0dd9780>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_start_bot_command'>] [hook]
        pytest_pycollect_makeitem [hook]
            name: __doc__
            obj: 
	Here we test our main console utility functionality

            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __new__
            obj: <built-in method __new__ of type object at 0x87a9a0>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __format__
            obj: <method '__format__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_cmd_start.py'>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tbtbot/tests/tbtboter/test_cmd_start.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function 'test_start_bot_command'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_start_bot_command'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tbtbot/tests/tbtboter/test_cmd_start.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module 'tbtbot/tests/tbtboter/test_other.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
      find_module called for: tbtbot.tests.tbtboter.test_other [assertion]
      matched test file '/home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_other.py' [assertion]
      found cached rewritten pyc for '/home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_other.py' [assertion]
        pytest_pycollect_makeitem [hook]
            name: __package__
            obj: tbtbot.tests.tbtboter
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/_pytest/assertion/rewrite.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: CliRunner
            obj: <class 'click.testing.CliRunner'>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: importlib
            obj: <module 'importlib' from '/usr/local/lib/python3.5/importlib/__init__.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __name__
            obj: tbtbot.tests.tbtboter.test_other
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __builtins__
            obj: {'round': <built-in function round>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'memoryview': <class 'memoryview'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'OverflowError': <class 'OverflowError'>, 'license': Type license() to see the full license text, 'property': <class 'property'>, 'repr': <built-in function repr>, 'open': <built-in function open>, 'RuntimeError': <class 'RuntimeError'>, 'ImportWarning': <class 'ImportWarning'>, 'abs': <built-in function abs>, 'help': Type help() for interactive help, or help(object) for help about object., 'True': True, 'MemoryError': <class 'MemoryError'>, 'reversed': <class 'reversed'>, 'KeyError': <class 'KeyError'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'NotImplemented': NotImplemented, 'vars': <built-in function vars>, 'FutureWarning': <class 'FutureWarning'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'iter': <built-in function iter>, 'all': <built-in function all>, 'bool': <class 'bool'>, 'InterruptedError': <class 'InterruptedError'>, 'ReferenceError': <class 'ReferenceError'>, 'sorted': <built-in function sorted>, 'ValueError': <class 'ValueError'>, 'compile': <built-in function compile>, 'RecursionError': <class 'RecursionError'>, 'isinstance': <built-in function isinstance>, 'bytes': <class 'bytes'>, 'TypeError': <class 'TypeError'>, 'SystemExit': <class 'SystemExit'>, 'NotImplementedError': <class 'NotImplementedError'>, 'locals': <built-in function locals>, 'IndexError': <class 'IndexError'>, 'NameError': <class 'NameError'>, 'TimeoutError': <class 'TimeoutError'>, 'max': <built-in function max>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'Ellipsis': Ellipsis, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'map': <class 'map'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'BytesWarning': <class 'BytesWarning'>, 'FileExistsError': <class 'FileExistsError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'id': <built-in function id>, 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'ord': <built-in function ord>, 'tuple': <class 'tuple'>, 'callable': <built-in function callable>, 'IndentationError': <class 'IndentationError'>, 'zip': <class 'zip'>, 'ImportError': <class 'ImportError'>, 'format': <built-in function format>, 'dict': <class 'dict'>, 'None': None, 'min': <built-in function min>, '__name__': 'builtins', 'OSError': <class 'OSError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'delattr': <built-in function delattr>, 'hasattr': <built-in function hasattr>, 'float': <class 'float'>, 'PermissionError': <class 'PermissionError'>, 'pow': <built-in function pow>, 'NotADirectoryError': <class 'NotADirectoryError'>, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, 'staticmethod': <class 'staticmethod'>, 'setattr': <built-in function setattr>, 'type': <class 'type'>, 'set': <class 'set'>, 'Warning': <class 'Warning'>, 'UnicodeError': <class 'UnicodeError'>, 'ConnectionError': <class 'ConnectionError'>, 'chr': <built-in function chr>, 'print': <built-in function print>, 'TabError': <class 'TabError'>, 'list': <class 'list'>, 'bin': <built-in function bin>, '__package__': '', 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'SystemError': <class 'SystemError'>, 'range': <class 'range'>, 'int': <class 'int'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'dir': <built-in function dir>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'globals': <built-in function globals>, 'SyntaxError': <class 'SyntaxError'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'AttributeError': <class 'AttributeError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'StopIteration': <class 'StopIteration'>, 'UserWarning': <class 'UserWarning'>, 'LookupError': <class 'LookupError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'hex': <built-in function hex>, 'ArithmeticError': <class 'ArithmeticError'>, 'BufferError': <class 'BufferError'>, 'len': <built-in function len>, 'getattr': <built-in function getattr>, 'slice': <class 'slice'>, 'frozenset': <class 'frozenset'>, '__import__': <built-in function __import__>, 'hash': <built-in function hash>, 'str': <class 'str'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), 'next': <built-in function next>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'EnvironmentError': <class 'OSError'>, 'input': <built-in function input>, 'ascii': <built-in function ascii>, 'classmethod': <class 'classmethod'>, 'sum': <built-in function sum>, 'EOFError': <class 'EOFError'>, 'BaseException': <class 'BaseException'>, 'IOError': <class 'OSError'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'False': False, 'enumerate': <class 'enumerate'>, '__build_class__': <built-in function __build_class__>, 'oct': <built-in function oct>, 'AssertionError': <class 'AssertionError'>, 'divmod': <built-in function divmod>, 'exec': <built-in function exec>, 'bytearray': <class 'bytearray'>, 'copyright': Copyright (c) 2001-2015 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'BlockingIOError': <class 'BlockingIOError'>, '__debug__': True, 'GeneratorExit': <class 'GeneratorExit'>, 'any': <built-in function any>, 'filter': <class 'filter'>, 'Exception': <class 'Exception'>, 'super': <class 'super'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'object': <class 'object'>, 'complex': <class 'complex'>, '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", 'eval': <built-in function eval>, 'issubclass': <built-in function issubclass>, 'FloatingPointError': <class 'FloatingPointError'>, 'UnboundLocalError': <class 'UnboundLocalError'>}
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __spec__
            obj: ModuleSpec(name='tbtbot.tests.tbtboter.test_other', loader=<_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>)
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: os
            obj: <module 'os' from '/usr/local/lib/python3.5/os.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: pytest
            obj: <module 'pytest' from '/home/s_ibrohimov/projects/tbtbot/env/lib/python3.5/site-packages/pytest.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __file__
            obj: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/test_other.py
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __doc__
            obj: 
	Here we test our main console utility functionality

            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: test_call_config_required_cmd_outside_of_bot_folder
            obj: <function test_call_config_required_cmd_outside_of_bot_folder at 0x7f0cf2538ae8>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x7f0cf0dde390>
          find_module called for: py._io.saferepr [assertion]
          find_module called for: repr [assertion]
            pytest_make_parametrize_id [hook]
                val: start
                config: <_pytest.config.Config object at 0x7f0cf6a763c8>
            finish pytest_make_parametrize_id --> None [hook]
          find_module called for: encodings.unicode_escape [assertion]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_call_config_required_cmd_outside_of_bot_folder[start]'>] [hook]
        pytest_pycollect_makeitem [hook]
            name: __cached__
            obj: /home/s_ibrohimov/projects/tbtbot/tbtbot/tests/tbtboter/__pycache__/test_other.cpython-35-PYTEST.pyc
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: cli
            obj: <module 'tbtbot.tbtboter.cli' from '/home/s_ibrohimov/projects/tbtbot/tbtbot/tbtboter/cli.py'>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __loader__
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x7f0cf37a9160>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __setattr__
            obj: <slot wrapper '__setattr__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __new__
            obj: <built-in method __new__ of type object at 0x87a9a0>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __getattribute__
            obj: <slot wrapper '__getattribute__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __dict__
            obj: <member '__dict__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __delattr__
            obj: <slot wrapper '__delattr__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __repr__
            obj: <slot wrapper '__repr__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __dir__
            obj: <method '__dir__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __init__
            obj: <slot wrapper '__init__' of 'module' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __ge__
            obj: <slot wrapper '__ge__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __format__
            obj: <method '__format__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __subclasshook__
            obj: <method '__subclasshook__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __reduce_ex__
            obj: <method '__reduce_ex__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __lt__
            obj: <slot wrapper '__lt__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __ne__
            obj: <slot wrapper '__ne__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __le__
            obj: <slot wrapper '__le__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __reduce__
            obj: <method '__reduce__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __eq__
            obj: <slot wrapper '__eq__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __str__
            obj: <slot wrapper '__str__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __class__
            obj: <attribute '__class__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __sizeof__
            obj: <method '__sizeof__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __gt__
            obj: <slot wrapper '__gt__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            name: __hash__
            obj: <slot wrapper '__hash__' of 'object' objects>
            collector: <Module 'tbtbot/tests/tbtboter/test_other.py'>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tbtbot/tests/tbtboter/test_other.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function 'test_call_config_required_cmd_outside_of_bot_folder[start]'> [collection]
      pytest_itemcollected [hook]
          item: <Function 'test_call_config_required_cmd_outside_of_bot_folder[start]'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tbtbot/tests/tbtboter/test_other.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          items: [<Function 'test_bot_config_checker'>, <Function 'test_make_config_file_func'>, <Function 'test_make_env_file_func'>, <Function 'test_set_env_func'>, <Function 'test_create_with_webhook_without_cert'>, <Function 'test_create_bot_with_upd'>, <Function 'test_create_bot_with_unknown_argument'>, <Function 'test_create_ssl_cert_command_invalid_path'>, <Function 'test_create_certificat_success'>, <Function 'test_create_certificat_fail'>, <Function 'test_create_ssl_cert_failed'>, <Function 'test_create_ssl_cert_succed'>, <Function 'test_start_bot_command'>, <Function 'test_call_config_required_cmd_outside_of_bot_folder[start]'>]
          config: <_pytest.config.Config object at 0x7f0cf6a763c8>
          session: <Session 'tbtbot'>
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session 'tbtbot'>
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> [<Function 'test_bot_config_checker'>, <Function 'test_make_config_file_func'>, <Function 'test_make_env_file_func'>, <Function 'test_set_env_func'>, <Function 'test_create_with_webhook_without_cert'>, <Function 'test_create_bot_with_upd'>, <Function 'test_create_bot_with_unknown_argument'>, <Function 'test_create_ssl_cert_command_invalid_path'>, <Function 'test_create_certificat_success'>, <Function 'test_create_certificat_fail'>, <Function 'test_create_ssl_cert_failed'>, <Function 'test_create_ssl_cert_succed'>, <Function 'test_start_bot_command'>, <Function 'test_call_config_required_cmd_outside_of_bot_folder[start]'>] [hook]
    pytest_runtestloop [hook]
        session: <Session 'tbtbot'>
      pytest_runtest_protocol [hook]
          item: <Function 'test_bot_config_checker'>
          nextitem: <Function 'test_make_config_file_func'>
        pytest_runtest_logstart [hook]
            location: ('tbtbot/tests/test_utils.py', 9, 'test_bot_config_checker')
            nodeid: tbtbot/tests/test_utils.py::test_bot_config_checker
        find_module called for: pathlib [assertion]
        find_module called for: ntpath [assertion]
        find_module called for: nt [assertion]
        find_module called for: nt [assertion]
        find_module called for: nt [assertion]
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_bot_config_checker'>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_bot_config_checker'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/test_utils.py::test_bot_config_checker' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/test_utils.py::test_bot_config_checker' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/test_utils.py::test_bot_config_checker' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_bot_config_checker'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_bot_config_checker'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_bot_config_checker'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/test_utils.py::test_bot_config_checker' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/test_utils.py::test_bot_config_checker' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/test_utils.py::test_bot_config_checker' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_bot_config_checker'>
            nextitem: <Function 'test_make_config_file_func'>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_bot_config_checker'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/test_utils.py::test_bot_config_checker' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/test_utils.py::test_bot_config_checker' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/test_utils.py::test_bot_config_checker' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_make_config_file_func'>
          nextitem: <Function 'test_make_env_file_func'>
        pytest_runtest_logstart [hook]
            location: ('tbtbot/tests/test_utils.py', 13, 'test_make_config_file_func')
            nodeid: tbtbot/tests/test_utils.py::test_make_config_file_func
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_make_config_file_func'>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_make_config_file_func'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/test_utils.py::test_make_config_file_func' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/test_utils.py::test_make_config_file_func' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/test_utils.py::test_make_config_file_func' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_make_config_file_func'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_make_config_file_func'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_make_config_file_func'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/test_utils.py::test_make_config_file_func' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/test_utils.py::test_make_config_file_func' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/test_utils.py::test_make_config_file_func' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_make_config_file_func'>
            nextitem: <Function 'test_make_env_file_func'>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_make_config_file_func'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/test_utils.py::test_make_config_file_func' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/test_utils.py::test_make_config_file_func' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/test_utils.py::test_make_config_file_func' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_make_env_file_func'>
          nextitem: <Function 'test_set_env_func'>
        pytest_runtest_logstart [hook]
            location: ('tbtbot/tests/test_utils.py', 21, 'test_make_env_file_func')
            nodeid: tbtbot/tests/test_utils.py::test_make_env_file_func
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_make_env_file_func'>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_make_env_file_func'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/test_utils.py::test_make_env_file_func' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/test_utils.py::test_make_env_file_func' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/test_utils.py::test_make_env_file_func' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_make_env_file_func'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_make_env_file_func'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_make_env_file_func'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/test_utils.py::test_make_env_file_func' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/test_utils.py::test_make_env_file_func' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/test_utils.py::test_make_env_file_func' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_make_env_file_func'>
            nextitem: <Function 'test_set_env_func'>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_make_env_file_func'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/test_utils.py::test_make_env_file_func' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/test_utils.py::test_make_env_file_func' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/test_utils.py::test_make_env_file_func' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_set_env_func'>
          nextitem: <Function 'test_create_with_webhook_without_cert'>
        pytest_runtest_logstart [hook]
            location: ('tbtbot/tests/test_utils.py', 29, 'test_set_env_func')
            nodeid: tbtbot/tests/test_utils.py::test_set_env_func
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_set_env_func'>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_set_env_func'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/test_utils.py::test_set_env_func' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/test_utils.py::test_set_env_func' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/test_utils.py::test_set_env_func' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_set_env_func'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_set_env_func'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_set_env_func'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/test_utils.py::test_set_env_func' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/test_utils.py::test_set_env_func' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/test_utils.py::test_set_env_func' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_set_env_func'>
            nextitem: <Function 'test_create_with_webhook_without_cert'>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_set_env_func'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/test_utils.py::test_set_env_func' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/test_utils.py::test_set_env_func' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/test_utils.py::test_set_env_func' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_create_with_webhook_without_cert'>
          nextitem: <Function 'test_create_bot_with_upd'>
        pytest_runtest_logstart [hook]
            location: ('tbtbot/tests/tbtboter/test_cmd_create_bot.py', 24, 'test_create_with_webhook_without_cert')
            nodeid: tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_with_webhook_without_cert
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_create_with_webhook_without_cert'>
          pytest_fixture_setup [hook]
              request: <SubRequest 'runner' for <Function 'test_create_with_webhook_without_cert'>>
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_create_bot.py' >
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x7f0cf0d94240> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_with_webhook_without_cert'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_with_webhook_without_cert' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_with_webhook_without_cert' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_with_webhook_without_cert' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_create_with_webhook_without_cert'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_create_with_webhook_without_cert'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_with_webhook_without_cert'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_with_webhook_without_cert' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_with_webhook_without_cert' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_with_webhook_without_cert' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_create_with_webhook_without_cert'>
            nextitem: <Function 'test_create_bot_with_upd'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_create_bot.py' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_with_webhook_without_cert'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_with_webhook_without_cert' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_with_webhook_without_cert' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_with_webhook_without_cert' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_create_bot_with_upd'>
          nextitem: <Function 'test_create_bot_with_unknown_argument'>
        pytest_runtest_logstart [hook]
            location: ('tbtbot/tests/tbtboter/test_cmd_create_bot.py', 31, 'test_create_bot_with_upd')
            nodeid: tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_upd
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_create_bot_with_upd'>
          pytest_fixture_setup [hook]
              request: <SubRequest 'runner' for <Function 'test_create_bot_with_upd'>>
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_create_bot.py' >
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x7f0cf0d947f0> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_bot_with_upd'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_upd' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_upd' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_upd' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_create_bot_with_upd'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_create_bot_with_upd'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_bot_with_upd'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_upd' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_upd' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_upd' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_create_bot_with_upd'>
            nextitem: <Function 'test_create_bot_with_unknown_argument'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_create_bot.py' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_bot_with_upd'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_upd' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_upd' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_upd' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_create_bot_with_unknown_argument'>
          nextitem: <Function 'test_create_ssl_cert_command_invalid_path'>
        pytest_runtest_logstart [hook]
            location: ('tbtbot/tests/tbtboter/test_cmd_create_bot.py', 41, 'test_create_bot_with_unknown_argument')
            nodeid: tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_unknown_argument
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_create_bot_with_unknown_argument'>
          pytest_fixture_setup [hook]
              request: <SubRequest 'runner' for <Function 'test_create_bot_with_unknown_argument'>>
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_create_bot.py' >
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x7f0cf0d93208> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_bot_with_unknown_argument'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_unknown_argument' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_unknown_argument' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_unknown_argument' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_create_bot_with_unknown_argument'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_create_bot_with_unknown_argument'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_bot_with_unknown_argument'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_unknown_argument' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_unknown_argument' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_unknown_argument' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_create_bot_with_unknown_argument'>
            nextitem: <Function 'test_create_ssl_cert_command_invalid_path'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_create_bot.py' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_bot_with_unknown_argument'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_unknown_argument' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_unknown_argument' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_bot.py::test_create_bot_with_unknown_argument' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_create_ssl_cert_command_invalid_path'>
          nextitem: <Function 'test_create_certificat_success'>
        pytest_runtest_logstart [hook]
            location: ('tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py', 24, 'test_create_ssl_cert_command_invalid_path')
            nodeid: tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_command_invalid_path
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_create_ssl_cert_command_invalid_path'>
          pytest_fixture_setup [hook]
              request: <SubRequest 'runner' for <Function 'test_create_ssl_cert_command_invalid_path'>>
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py' >
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x7f0cf0d942b0> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_ssl_cert_command_invalid_path'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_command_invalid_path' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_command_invalid_path' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_command_invalid_path' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_create_ssl_cert_command_invalid_path'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_create_ssl_cert_command_invalid_path'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_ssl_cert_command_invalid_path'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_command_invalid_path' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_command_invalid_path' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_command_invalid_path' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_create_ssl_cert_command_invalid_path'>
            nextitem: <Function 'test_create_certificat_success'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_ssl_cert_command_invalid_path'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_command_invalid_path' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_command_invalid_path' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_command_invalid_path' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_create_certificat_success'>
          nextitem: <Function 'test_create_certificat_fail'>
        pytest_runtest_logstart [hook]
            location: ('tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py', 35, 'test_create_certificat_success')
            nodeid: tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_success
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_create_certificat_success'>
          pytest_fixture_setup [hook]
              request: <SubRequest 'runner' for <Function 'test_create_certificat_success'>>
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py' >
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x7f0cf0d935f8> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_certificat_success'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_success' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_success' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_success' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_create_certificat_success'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_create_certificat_success'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_certificat_success'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_success' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_success' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_success' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_create_certificat_success'>
            nextitem: <Function 'test_create_certificat_fail'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_certificat_success'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_success' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_success' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_success' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_create_certificat_fail'>
          nextitem: <Function 'test_create_ssl_cert_failed'>
        pytest_runtest_logstart [hook]
            location: ('tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py', 47, 'test_create_certificat_fail')
            nodeid: tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_fail
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_create_certificat_fail'>
          pytest_fixture_setup [hook]
              request: <SubRequest 'runner' for <Function 'test_create_certificat_fail'>>
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py' >
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x7f0cf0d2f588> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_certificat_fail'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_fail' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_fail' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_fail' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_create_certificat_fail'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_create_certificat_fail'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_certificat_fail'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_fail' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_fail' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_fail' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_create_certificat_fail'>
            nextitem: <Function 'test_create_ssl_cert_failed'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_certificat_fail'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_fail' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_fail' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_certificat_fail' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_create_ssl_cert_failed'>
          nextitem: <Function 'test_create_ssl_cert_succed'>
        pytest_runtest_logstart [hook]
            location: ('tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py', 59, 'test_create_ssl_cert_failed')
            nodeid: tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_failed
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_create_ssl_cert_failed'>
          pytest_fixture_setup [hook]
              request: <SubRequest 'runner' for <Function 'test_create_ssl_cert_failed'>>
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py' >
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x7f0cf0da8240> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_ssl_cert_failed'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_failed' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_failed' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_failed' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_create_ssl_cert_failed'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_create_ssl_cert_failed'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_ssl_cert_failed'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_failed' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_failed' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_failed' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_create_ssl_cert_failed'>
            nextitem: <Function 'test_create_ssl_cert_succed'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_ssl_cert_failed'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_failed' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_failed' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_failed' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_create_ssl_cert_succed'>
          nextitem: <Function 'test_start_bot_command'>
        pytest_runtest_logstart [hook]
            location: ('tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py', 72, 'test_create_ssl_cert_succed')
            nodeid: tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_succed
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_create_ssl_cert_succed'>
          pytest_fixture_setup [hook]
              request: <SubRequest 'runner' for <Function 'test_create_ssl_cert_succed'>>
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py' >
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x7f0cf0d32208> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_ssl_cert_succed'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_succed' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_succed' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_succed' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_create_ssl_cert_succed'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_create_ssl_cert_succed'>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_ssl_cert_succed'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_succed' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_succed' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_succed' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_create_ssl_cert_succed'>
            nextitem: <Function 'test_start_bot_command'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_create_ssl_cert_succed'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_succed' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_succed' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_create_ssl_cert.py::test_create_ssl_cert_succed' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_start_bot_command'>
          nextitem: <Function 'test_call_config_required_cmd_outside_of_bot_folder[start]'>
        pytest_runtest_logstart [hook]
            location: ('tbtbot/tests/tbtboter/test_cmd_start.py', 25, 'test_start_bot_command')
            nodeid: tbtbot/tests/tbtboter/test_cmd_start.py::test_start_bot_command
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_start_bot_command'>
          pytest_fixture_setup [hook]
              request: <SubRequest 'runner' for <Function 'test_start_bot_command'>>
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_start.py' >
          finish pytest_fixture_setup --> <click.testing.CliRunner object at 0x7f0cf0d94f98> [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_start_bot_command'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_start.py::test_start_bot_command' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_start.py::test_start_bot_command' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_start.py::test_start_bot_command' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_start_bot_command'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_start_bot_command'>
          find_module called for: app [assertion]
          find_module called for: envparse [assertion]
          find_module called for: tornado.httpserver [assertion]
          find_module called for: tornado.http1connection [assertion]
          find_module called for: tornado.tcpserver [assertion]
          find_module called for: tornado.process [assertion]
          find_module called for: configuration [assertion]
          find_module called for: routes [assertion]
          find_module called for: handlers [assertion]
          find_module called for: tbtbot.tbtboter.commands.cmd_start [assertion]
        pytest_runtest_makereport [hook]
            item: <Function 'test_start_bot_command'>
            call: <CallInfo when='call' exception: in start bot<module 'configuration' from '/tmp/tmpkhq611aw/new_bot/configuration.py'>>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_start.py::test_start_bot_command' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_start.py::test_start_bot_command' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_start.py::test_start_bot_command' when='call' outcome='failed'>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_start.py::test_start_bot_command' when='call' outcome='failed'>
            node: <Function 'test_start_bot_command'>
            call: <CallInfo when='call' exception: in start bot<module 'configuration' from '/tmp/tmpkhq611aw/new_bot/configuration.py'>>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_start_bot_command'>
            nextitem: <Function 'test_call_config_required_cmd_outside_of_bot_folder[start]'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='runner' scope='function' baseid='tbtbot/tests/tbtboter/test_cmd_start.py' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_start_bot_command'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_cmd_start.py::test_start_bot_command' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_start.py::test_start_bot_command' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_cmd_start.py::test_start_bot_command' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function 'test_call_config_required_cmd_outside_of_bot_folder[start]'>
          nextitem: None
        pytest_runtest_logstart [hook]
            location: ('tbtbot/tests/tbtboter/test_other.py', 12, 'test_call_config_required_cmd_outside_of_bot_folder[start]')
            nodeid: tbtbot/tests/tbtboter/test_other.py::test_call_config_required_cmd_outside_of_bot_folder[start]
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function 'test_call_config_required_cmd_outside_of_bot_folder[start]'>
          pytest_fixture_setup [hook]
              request: <SubRequest 'cmd' for <Function 'test_call_config_required_cmd_outside_of_bot_folder[start]'>>
              fixturedef: <FixtureDef name='cmd' scope='function' baseid='' >
          finish pytest_fixture_setup --> start [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_call_config_required_cmd_outside_of_bot_folder[start]'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_other.py::test_call_config_required_cmd_outside_of_bot_folder[start]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_other.py::test_call_config_required_cmd_outside_of_bot_folder[start]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_other.py::test_call_config_required_cmd_outside_of_bot_folder[start]' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function 'test_call_config_required_cmd_outside_of_bot_folder[start]'>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function 'test_call_config_required_cmd_outside_of_bot_folder[start]'>
          find_module called for: tornado.platform.epoll [assertion]
          find_module called for: tornado.autoreload [assertion]
          find_module called for: tornado.simple_httpclient [assertion]
          find_module called for: tornado.tcpclient [assertion]
          find_module called for: certifi [assertion]
        pytest_runtest_makereport [hook]
            item: <Function 'test_call_config_required_cmd_outside_of_bot_folder[start]'>
            call: <CallInfo when='call' exception: <module 'configuration' from '/tmp/tmpkhq611aw/new_bot/configuration.py'>>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_other.py::test_call_config_required_cmd_outside_of_bot_folder[start]' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_other.py::test_call_config_required_cmd_outside_of_bot_folder[start]' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_other.py::test_call_config_required_cmd_outside_of_bot_folder[start]' when='call' outcome='failed'>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_other.py::test_call_config_required_cmd_outside_of_bot_folder[start]' when='call' outcome='failed'>
            node: <Function 'test_call_config_required_cmd_outside_of_bot_folder[start]'>
            call: <CallInfo when='call' exception: <module 'configuration' from '/tmp/tmpkhq611aw/new_bot/configuration.py'>>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function 'test_call_config_required_cmd_outside_of_bot_folder[start]'>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='cmd' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function 'test_call_config_required_cmd_outside_of_bot_folder[start]'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tbtbot/tests/tbtboter/test_other.py::test_call_config_required_cmd_outside_of_bot_folder[start]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tbtbot/tests/tbtboter/test_other.py::test_call_config_required_cmd_outside_of_bot_folder[start]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tbtbot/tests/tbtboter/test_other.py::test_call_config_required_cmd_outside_of_bot_folder[start]' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        exitstatus: 1
        session: <Session 'tbtbot'>
    cache-write cache/lastfailed: {'tbtbot/tests/tbtboter/test_cmd_start.py::test_start_bot_command': True, 'tbtbot/tests/tbtboter/test_other.py::test_call_config_required_cmd_outside_of_bot_folder[start]': True} [cache]
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x7f0cf251c940>
          exitstatus: 1
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x7f0cf6a763c8>
    finish pytest_unconfigure --> [] [hook]
  finish [config:tmpdir]
